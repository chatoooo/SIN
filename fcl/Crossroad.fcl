// Block definition (there may be more than one block per file)
FUNCTION_BLOCK Crossroad

// Definice vstupu - delky front
VAR_INPUT				
	zidToMal : REAL;	// delka fronty Zidenice -> Malomerice
	malToZid : REAL;	// delka fronty Malomerice -> Zidenice 
	vinToZid : REAL;	// delka fronty Vinohrady -> Zidenice  
END_VAR

// Definice vystupnich hodnot
VAR_OUTPUT
    gZidToMal : REAL;  // doba zelene na semaforu Zidenice -> Malomerice
    gMalToZid : REAL;  // doba zelene na semaforu Malomerice -> Zidenice
    gVinToZid : REAL;  // doba zelene na semaforu Vinohrady -> Zidenice
END_VAR

FUZZIFY zidToMal
    TERM short := (0, 1) (20, 1) (25, 0); 
    TERM medium := (20, 0) (24, 1) (70, 1) (75, 0);
    TERM long := (70, 0) (75, 1) (100, 1);
END_FUZZIFY

FUZZIFY malToZid
    TERM short := (0, 1) (20, 1) (25, 0); 
    TERM medium := (20, 0) (24, 1) (70, 1) (75, 0);
    TERM long := (70, 0) (75, 1) (100, 1);
END_FUZZIFY

FUZZIFY vinToZid
    TERM short := (0, 1) (20, 1) (25, 0); 
    TERM medium := (20, 0) (24, 1) (70, 1) (75, 0);
    TERM long := (70, 0) (75, 1) (100, 1);
END_FUZZIFY

DEFUZZIFY gZidToMal
    TERM gShort := (10,0) (15,1) (20,0);
	TERM gMedium := (20,0) (25,1) (30,0);
	TERM gLong := (30,0) (35,1) (40,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 15;		// Default value is 5 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY gMalToZid
    TERM gShort := (10,0) (15,1) (20,0);
	TERM gMedium := (20,0) (25,1) (30,0);
	TERM gLong := (30,0) (35,1) (40,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 15;		// Default value is 5 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY gVinToZid
    TERM gShort := (10,0) (15,1) (20,0);
	TERM gMedium := (20,0) (25,1) (30,0);
	TERM gLong := (30,0) (35,1) (40,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 15;		// Default value is 5 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK Rule1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

	// smer Vinohrandy -> Zidenice
	RULE 1 : IF vinToZid IS short THEN gVinToZid IS gShort;
	RULE 2 : IF vinToZid IS medium THEN gVinToZid IS gMedium;
	RULE 3 : IF vinToZid IS long THEN gVinToZid IS gLong;
	
	// smer Zidenice -> Malomerice
	RULE 4 : IF zidToMal IS short THEN gZidToMal IS gShort;
	RULE 5 : IF zidToMal IS medium THEN gZidToMal IS gMedium;
	RULE 6 : IF zidToMal IS long THEN gZidToMal IS gLong;
	
	// smer Malomerice -> Zidenice
	RULE 7 : IF zidToMal IS short AND malToZid IS short THEN gMalToZid IS gShort;
	RULE 8 : IF zidToMal IS short AND malToZid IS medium THEN gMalToZid IS gMedium;
	RULE 9 : IF zidToMal IS short AND malToZid IS long THEN gMalToZid IS gLong;
	RULE 10 : IF zidToMal IS medium AND malToZid IS short OR malToZid IS medium THEN gMalToZid IS gMedium;
	RULE 11 : IF zidToMal IS medium AND malToZid IS long THEN gMalToZid IS gLong;
	RULE 12 : IF zidToMal IS long THEN gMalToZid IS gLong;	
END_RULEBLOCK	
	
END_FUNCTION_BLOCK